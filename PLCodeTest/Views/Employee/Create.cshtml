@model  PLCodeTest.Data.Views.Employee
  @using PLCodeTest.Helpers
@{
    ViewBag.Title = ResourceWeb.addNewEmployeeText;
}

<h2>@ResourceWeb.addNewEmployeeText</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, @"First Name:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", rows = "1" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, @"Last Name:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", rows = "1" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, @"Birth Date:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", rows = "1" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SSN, @"SSN:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control", rows = "1" } })
            @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="">
            <p>Note: Assumes $52,000.00 salary based on $2000 x 26</p>
        </div>
    </div>

    <div id="dependents" class="form-group">
        @Html.EditorFor(x => x.Dependents)
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.AddLink("Add Dependents", "#dependents", ".dependent", "dependents",
            typeof(PLCodeTest.Data.Views.Dependent))
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">
            function removeNestedForm(element, container, deleteElement) {
                $container = $(element).parents(container);
                $container.find(deleteElement).val('True');
                $container.hide();
            }

            function addNestedForm(container, counter, ticks, content) {
                var nextIndex = $(counter).length;
                var pattern = new RegExp(ticks, "gi");
                content = content.replace(pattern, nextIndex);
                $(container).append(content);
            }

        </script>
    }
